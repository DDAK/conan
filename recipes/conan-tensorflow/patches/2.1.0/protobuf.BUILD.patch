diff --git a/third_party/systemlibs/protobuf.BUILD b/third_party/systemlibs/protobuf.BUILD
index 89a3f8c3fa..d08e43574b 100644
--- a/third_party/systemlibs/protobuf.BUILD
+++ b/third_party/systemlibs/protobuf.BUILD
@@ -12,10 +12,12 @@ filegroup(
     visibility = ["//visibility:public"],
 )
 
-HEADERS = [
+PROTOBUF_HEADERS = [
     "google/protobuf/any.pb.h",
     "google/protobuf/any.proto",
     "google/protobuf/arena.h",
+    "google/protobuf/arena_impl.h",
+    "google/protobuf/arenastring.h",
     "google/protobuf/compiler/importer.h",
     "google/protobuf/descriptor.h",
     "google/protobuf/descriptor.pb.h",
@@ -30,8 +32,11 @@ HEADERS = [
     "google/protobuf/io/coded_stream.h",
     "google/protobuf/io/zero_copy_stream.h",
     "google/protobuf/io/zero_copy_stream_impl_lite.h",
+	"google/protobuf/io/tokenizer.h",
     "google/protobuf/map.h",
+    "google/protobuf/port.h",
     "google/protobuf/port_def.inc",
+    "google/protobuf/port_undef.inc",
     "google/protobuf/repeated_field.h",
     "google/protobuf/text_format.h",
     "google/protobuf/timestamp.pb.h",
@@ -40,51 +45,107 @@ HEADERS = [
     "google/protobuf/util/type_resolver_util.h",
     "google/protobuf/wrappers.pb.h",
     "google/protobuf/wrappers.proto",
+    "google/protobuf/stubs/common.h",
+    "google/protobuf/stubs/port.h",
+    "google/protobuf/stubs/macros.h",
+    "google/protobuf/stubs/platform_macros.h",
+    "google/protobuf/stubs/logging.h",
+    "google/protobuf/stubs/strutil.h",
+    "google/protobuf/stubs/stringpiece.h",
+	"google/protobuf/stubs/hash.h",
+	"google/protobuf/compiler/php/php_generator.h",
+	"google/protobuf/stubs/fastmem.h",
+    "google/protobuf/generated_message_table_driven.h",
+	"google/protobuf/generated_enum_util.h",
+	"google/protobuf/message_lite.h",
+	"google/protobuf/stubs/once.h",
+	"google/protobuf/map_type_handler.h",
+	"google/protobuf/parse_context.h",
+	"google/protobuf/implicit_weak_message.h",
+	"google/protobuf/stubs/casts.h",
+	"google/protobuf/metadata_lite.h",
+	"google/protobuf/generated_message_util.h",
+	"google/protobuf/any.h",
+	"google/protobuf/has_bits.h",
+	"google/protobuf/wire_format_lite.h",
+	"google/protobuf/map_entry_lite.h",
+	"google/protobuf/map_field_lite.h",
+	"google/protobuf/inlined_string_field.h",
+	"google/protobuf/metadata.h",
+	"google/protobuf/unknown_field_set.h",
+	"google/protobuf/stubs/callback.h",
+	"google/protobuf/stubs/stl_util.h",
+	"google/protobuf/generated_message_reflection.h",
+	"google/protobuf/stubs/mutex.h",
+	"google/protobuf/generated_enum_reflection.h",
+	"google/protobuf/message.h",
+	"google/protobuf/extension_set.h",
+	"google/protobuf/map_entry.h",
+	"google/protobuf/reflection_ops.h",
+	"google/protobuf/map_field_inl.h",
+	"google/protobuf/map_field.h",
+	"google/protobuf/reflection.h",
+	"google/protobuf/util/type_resolver.h",
+	"google/protobuf/type.pb.h",
+	"google/protobuf/source_context.pb.h",
+	"google/protobuf/stubs/status.h",
+	"google/protobuf/stubs/bytestream.h",
+	"google/protobuf/compiler/parser.h",
+	"google/protobuf/descriptor_database.h",
+	"google/protobuf/wire_format.h",
+	"google/protobuf/compiler/code_generator.h",
+	"google/protobuf/io/printer.h",
+	"google/protobuf/compiler/plugin.h",
+	"google/protobuf/compiler/objectivec/objectivec_helpers.h",
+	"google/protobuf/compiler/csharp/csharp_names.h"
 ]
 
 genrule(
     name = "link_headers",
-    outs = HEADERS,
+    outs = PROTOBUF_HEADERS,
     cmd = """
       for i in $(OUTS); do
         f=$${i#$(@D)/}
         mkdir -p $(@D)/$${f%/*}
-        ln -sf $(INCLUDEDIR)/$$f $(@D)/$$f
+		echo "LINKING PROTOBUF HEADER file $(com_google_protobuf_INCLUDEDIR)/$$f to $(@D)/$$f"
+        ln -sf $(com_google_protobuf_INCLUDEDIR)/$$f $(@D)/$$f
       done
     """,
 )
 
 cc_library(
     name = "protobuf",
-    hdrs = HEADERS,
-    linkopts = ["-lprotobuf"],
+    hdrs = PROTOBUF_HEADERS,
+    includes = ["."],
+    linkopts = ["-L $(com_google_protobuf_LIBDIR) -lprotobuf"],
     visibility = ["//visibility:public"],
 )
 
 cc_library(
     name = "protobuf_headers",
-    hdrs = HEADERS,
-    linkopts = ["-lprotobuf"],
+    hdrs = PROTOBUF_HEADERS,
+    includes = ["."],
+    linkopts = ["-L $(com_google_protobuf_LIBDIR) -lprotobuf"],
     visibility = ["//visibility:public"],
 )
 
 cc_library(
     name = "protoc_lib",
-    linkopts = ["-lprotoc"],
+    linkopts = ["-L $(com_google_protobuf_LIBDIR) -lprotobuf"],
     visibility = ["//visibility:public"],
 )
 
 genrule(
     name = "protoc",
     outs = ["protoc.bin"],
-    cmd = "ln -s $$(which protoc) $@",
+    cmd = "ln -s $(com_google_protobuf_PREFIX)/bin/protoc $@",
     executable = 1,
     visibility = ["//visibility:public"],
 )
 
 cc_proto_library(
     name = "cc_wkt_protos",
-    hdrs = HEADERS,
+    hdrs = PROTOBUF_HEADERS,
     internal_bootstrap_hack = 1,
     protoc = ":protoc",
     visibility = ["//visibility:public"],
